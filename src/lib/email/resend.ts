import { Resend } from 'resend';

const resend = new Resend(process.env.EMAIL_SERVER_PASSWORD || process.env.RESEND_API_KEY);

export interface UpgradeRequestEmailData {
  userName: string;
  userEmail: string;
  targetPlan: 'professional' | 'enterprise';
  userId: string;
  activationToken: string;
}

export interface UpgradeConfirmationEmailData {
  userName: string;
  userEmail: string;
  plan: 'professional' | 'enterprise';
}

export async function sendUpgradeRequestToAdmin(data: UpgradeRequestEmailData) {
  const planNames = {
    professional: 'Professional (299,000ƒë/th√°ng)',
    enterprise: 'Enterprise (999,000ƒë/th√°ng)'
  };

  const activationUrl = `${process.env.NEXT_PUBLIC_APP_URL}/api/activate-upgrade?token=${data.activationToken}`;

  try {
    const result = await resend.emails.send({
      from: 'AutoPost VN <onboarding@resend.dev>',
      to: ['cuong.vhcc@gmail.com'],
      subject: `Y√™u c·∫ßu n√¢ng c·∫•p t√†i kho·∫£n - ${data.userEmail}`,
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
            .info-box { background: white; padding: 20px; border-left: 4px solid #667eea; margin: 20px 0; }
            .info-row { display: flex; margin: 10px 0; }
            .info-label { font-weight: bold; min-width: 120px; color: #667eea; }
            .info-value { flex: 1; }
            .button { display: inline-block; padding: 15px 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-decoration: none; border-radius: 8px; font-weight: bold; margin: 20px 0; }
            .button:hover { opacity: 0.9; }
            .footer { text-align: center; margin-top: 30px; color: #888; font-size: 14px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>üöÄ Y√™u c·∫ßu n√¢ng c·∫•p t√†i kho·∫£n</h1>
            </div>
            <div class="content">
              <p>Xin ch√†o Admin,</p>
              <p>C√≥ m·ªôt y√™u c·∫ßu n√¢ng c·∫•p t√†i kho·∫£n m·ªõi t·ª´ ng∆∞·ªùi d√πng:</p>
              
              <div class="info-box">
                <div class="info-row">
                  <span class="info-label">T√™n ng∆∞·ªùi d√πng:</span>
                  <span class="info-value">${data.userName}</span>
                </div>
                <div class="info-row">
                  <span class="info-label">Email:</span>
                  <span class="info-value">${data.userEmail}</span>
                </div>
                <div class="info-row">
                  <span class="info-label">User ID:</span>
                  <span class="info-value">${data.userId}</span>
                </div>
                <div class="info-row">
                  <span class="info-label">G√≥i y√™u c·∫ßu:</span>
                  <span class="info-value"><strong>${planNames[data.targetPlan]}</strong></span>
                </div>
              </div>

              <p><strong>ƒê·ªÉ k√≠ch ho·∫°t t√†i kho·∫£n n√†y, vui l√≤ng:</strong></p>
              <ol>
                <li>X√°c nh·∫≠n ƒë√£ nh·∫≠n ƒë∆∞·ª£c thanh to√°n t·ª´ ng∆∞·ªùi d√πng</li>
                <li>Nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ k√≠ch ho·∫°t g√≥i n√¢ng c·∫•p</li>
              </ol>

              <div style="text-align: center;">
                <a href="${activationUrl}" class="button">
                  ‚úÖ K√≠ch ho·∫°t ngay
                </a>
              </div>

              <p style="margin-top: 30px; padding: 15px; background: #fff3cd; border-radius: 8px;">
                <strong>‚ö†Ô∏è L∆∞u √Ω:</strong> Link k√≠ch ho·∫°t c√≥ hi·ªáu l·ª±c trong 7 ng√†y. Sau khi k√≠ch ho·∫°t, ng∆∞·ªùi d√πng s·∫Ω nh·∫≠n ƒë∆∞·ª£c email x√°c nh·∫≠n t·ª± ƒë·ªông.
              </p>

              <div class="footer">
                <p>Email ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng AutoPost VN</p>
                <p>¬© ${new Date().getFullYear()} AutoPost VN. All rights reserved.</p>
              </div>
            </div>
          </div>
        </body>
        </html>
      `
    });

    return { success: true, data: result };
  } catch (error) {
    console.error('Failed to send upgrade request email:', error);
    return { success: false, error };
  }
}

export async function sendUpgradeConfirmationToUser(data: UpgradeConfirmationEmailData) {
  const planNames = {
    professional: 'Professional',
    enterprise: 'Enterprise'
  };

  const planFeatures = {
    professional: [
      '15 t√†i kho·∫£n social media',
      'Kh√¥ng gi·ªõi h·∫°n b√†i ƒëƒÉng',
      'AI Content Generator (Gemini)',
      'Analytics n√¢ng cao',
      'B√°o c√°o PDF export',
      'H·ªó tr·ª£ 24/7'
    ],
    enterprise: [
      'Kh√¥ng gi·ªõi h·∫°n t√†i kho·∫£n',
      'Kh√¥ng gi·ªõi h·∫°n b√†i ƒëƒÉng',
      'AI Content Generator Premium',
      'White-label solution',
      'Dedicated account manager',
      'Priority support'
    ]
  };

  try {
    const result = await resend.emails.send({
      from: 'AutoPost VN <onboarding@resend.dev>',
      to: [data.userEmail],
      subject: `üéâ T√†i kho·∫£n ${planNames[data.plan]} ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t!`,
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 40px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
            .success-icon { font-size: 60px; margin-bottom: 20px; }
            .features { background: white; padding: 25px; border-radius: 8px; margin: 25px 0; }
            .feature-item { padding: 10px 0; border-bottom: 1px solid #eee; }
            .feature-item:last-child { border-bottom: none; }
            .feature-item:before { content: '‚úì'; color: #10b981; font-weight: bold; margin-right: 10px; }
            .button { display: inline-block; padding: 15px 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-decoration: none; border-radius: 8px; font-weight: bold; margin: 20px 0; }
            .footer { text-align: center; margin-top: 30px; color: #888; font-size: 14px; }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <div class="success-icon">üéâ</div>
              <h1>Ch√∫c m·ª´ng ${data.userName}!</h1>
              <p style="font-size: 18px; margin: 10px 0 0 0;">T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p l√™n g√≥i <strong>${planNames[data.plan]}</strong></p>
            </div>
            <div class="content">
              <p>Xin ch√†o <strong>${data.userName}</strong>,</p>
              <p>Ch√∫ng t√¥i r·∫•t vui th√¥ng b√°o r·∫±ng t√†i kho·∫£n AutoPost VN c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p th√†nh c√¥ng!</p>
              
              <div class="features">
                <h3 style="margin-top: 0; color: #667eea;">T√≠nh nƒÉng c·ªßa g√≥i ${planNames[data.plan]}:</h3>
                ${planFeatures[data.plan].map(feature => `
                  <div class="feature-item">${feature}</div>
                `).join('')}
              </div>

              <p><strong>B·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng ngay:</strong></p>
              <p>T·∫•t c·∫£ t√≠nh nƒÉng cao c·∫•p ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t. H√£y ƒëƒÉng nh·∫≠p v√† tr·∫£i nghi·ªám nh·ªØng c√¥ng c·ª• m·∫°nh m·∫Ω m·ªõi!</p>

              <div style="text-align: center;">
                <a href="${process.env.NEXT_PUBLIC_APP_URL}/app" class="button">
                  Truy c·∫≠p Dashboard
                </a>
              </div>

              <p style="margin-top: 30px; padding: 20px; background: #e0f2fe; border-radius: 8px;">
                <strong>üí° M·∫πo:</strong> Kh√°m ph√° AI Content Generator v√† Analytics n√¢ng cao ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t social media c·ªßa b·∫°n!
              </p>

              <p style="margin-top: 30px;">N·∫øu c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email: <a href="mailto:cuong.vhcc@gmail.com">cuong.vhcc@gmail.com</a></p>

              <div class="footer">
                <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng AutoPost VN!</p>
                <p>¬© ${new Date().getFullYear()} AutoPost VN. All rights reserved.</p>
              </div>
            </div>
          </div>
        </body>
        </html>
      `
    });

    return { success: true, data: result };
  } catch (error) {
    console.error('Failed to send confirmation email:', error);
    return { success: false, error };
  }
}
